<?xml version="1.0" encoding="UTF-8" ?>

<configuration>
    <!--
        日志级别从低到高分为：TRACE < DEBUG < INFO < WARN < ERROR < FATAL 。
        如果设置为 WARN ，则低于 WARN 的信息都不会输出。
        Spring Boot 中默认配置 ERROR 、 WARN 和 INFO 级别的日志输出到控制台。

     -->

    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <springProperty scope="context" name="SERVER_NAME" source="spring.application.name"/>
    <springProperty scope="context" name="LOG_DIR" source="log.path" defaultValue="./logs"/>

    <!--输出到控制台 ConsoleAppender-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--展示格式 layout-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <!--输出策略-->
            <pattern>
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                [%X{traceId}] %d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </layout>
    </appender>

    <!-- INFO日志，输出到文件 -->
    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，
            所以我们使用下面的策略，可以避免输出 Error 的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <!-- DENY，日志将立即被抛弃不再经过其他过滤器 -->
            <!-- NEUTRAL，有序列表里的下个过滤器过接着处理日志 -->
            <!-- ACCEPT，日志会被立即处理，不再经过剩余过滤器 -->
            <!-- 用于配置符合过滤条件的操作 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 用于配置不符合过滤条件的操作 -->
            <onMismatch>DENY</onMismatch>
        </filter>

        <!-- 按照每天生成日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的路径和文件名-->
            <fileNamePattern>${LOG_DIR}/info/${SERVER_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>90</MaxHistory>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                [%X{traceId}] %d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- WARN日志，输出到文件 -->
    <appender name="fileWarnLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--如果只是想要 Info 级别的日志，只是过滤 info 还是会输出 Error 日志，因为 Error 的级别高，
            所以我们使用下面的策略，可以避免输出 Error 的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>WARN</level>
            <!-- DENY，日志将立即被抛弃不再经过其他过滤器 -->
            <!-- NEUTRAL，有序列表里的下个过滤器过接着处理日志 -->
            <!-- ACCEPT，日志会被立即处理，不再经过剩余过滤器 -->
            <!-- 用于配置符合过滤条件的操作 -->
            <onMatch>NEUTRAL</onMatch>
            <!-- 用于配置不符合过滤条件的操作 -->
            <onMismatch>DENY</onMismatch>
        </filter>

        <!-- 按照每天生成日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的路径和文件名-->
            <fileNamePattern>${LOG_DIR}/warn/${SERVER_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <MaxHistory>30</MaxHistory>
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                [%X{traceId}] %d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <!-- ERROR日志，输出到文件 -->
    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>

        <!-- 滚动策略 按照每天生成日志文件 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的路径和文件名-->
            <fileNamePattern>${LOG_DIR}/error/${SERVER_NAME}.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!--日志文件保留天数-->
            <!--<MaxHistory>30</MaxHistory>-->
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>
                <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
                [%X{traceId}] %d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>
    </appender>

    <root level="INFO">
        <!-- 输出到控制台 -->
        <appender-ref ref="consoleLog"/>
        <!-- INFO日志，输出到文件 -->
        <appender-ref ref="fileInfoLog"/>
        <!-- WARN日志，输出到文件 -->
        <appender-ref ref="fileWarnLog"/>
        <!-- ERROR日志，输出到文件 -->
        <appender-ref ref="fileErrorLog"/>
    </root>
</configuration>
